{% extends 'base_admin.html' %}

{% block title %}Modificar Persona{% endblock %}
{% block head %}
{{ super() }}
<link rel="stylesheet" href="{{ url_for('static', filename='css/modificar_veterano.css') }}">
{% endblock %}

{% block content %}

<h1 class="h2">Modificar Persona</h1>
<p>Complete los campos para actualizar la información del veterano.</p>
<hr>

<div class="container">
    <form class="formulario" method="post" action="{{ url_for('main.modificar_persona_guardar', dni=veterano.dni) }}">
        <!-- Información personal -->
        <section>
            <h3 class="h4">Información personal</h3>
            <div class="grid">
                <div>
                    <label>DNI*</label>
                    <input type="text" name="dni" value="{{ veterano.dni }}" disabled>
                </div>
                <div>
                    <label>Nombre*</label>
                    <input type="text" name="nombre" value="{{ veterano.nombre }}" required>
                </div>
                <div>
                    <label>Apellido*</label>
                    <input type="text" name="apellido" value="{{ veterano.apellido }}" required>
                </div>
                <div>
                    <label>Género</label>
                    <select name="genero">
                        <option value="masculino" {% if veterano.genero=='masculino' %}selected{% endif %}>Masculino
                        </option>
                        <option value="femenino" {% if veterano.genero=='femenino' %}selected{% endif %}>Femenino
                        </option>
                        <option value="otro" {% if veterano.genero=='otro' %}selected{% endif %}>Otro</option>
                        <option value="no especificado" {% if veterano.genero=='no especificado' %}selected{% endif %}>
                            No especificado</option>
                    </select>
                </div>
                <div>
                    <label>Fecha de nacimiento*</label>
                    <input type="date" name="fecha_nacimiento" id="fecha_nacimiento"
                        value="{{ veterano.fecha_nacimiento }}" required>
                </div>
                <div>
                    <label>Edad</label>
                    <input type="text" id="edad" disabled placeholder="Calculado automáticamente">
                </div>
                <div>
                    <label>Provincia de nacimiento</label>
                    <select name="provincia_nacimiento" id="provincia_nacimiento">
                        <option value="">Seleccione una provincia</option>
                        {% for provincia in provincias %}
                        <option value="{{ provincia.id_provincia }}" {% if
                            veterano.provincia_nacimiento==provincia.id_provincia %}selected{% endif %}>
                            {{ provincia.nombre }}
                        </option>
                        {% endfor %}
                    </select>
                </div>
                <div>
                    <label>Departamento de nacimiento</label>
                    <select name="departamento_nacimiento" id="departamento_nacimiento" disabled>
                        <option value="">Seleccione un departamento</option>
                    </select>
                </div>
                <div>
                    <label>Localidad de nacimiento</label>
                    <select name="localidad_nacimiento" id="localidad_nacimiento" disabled>
                        <option value="">Seleccione una localidad</option>
                    </select>
                </div>
            </div>
        </section>

        <!-- Información de contacto -->
        <section>
            <h3 class="h4">Información de contacto</h3>
            <div class="grid">
                <div>
                    <label>Provincia de residencia</label>
                    <select name="provincia_residencia" id="provincia_residencia">
                        <option value="">Seleccione una provincia</option>
                        {% for provincia in provincias %}
                        <option value="{{ provincia.id_provincia }}" {% if
                            veterano.provincia_residencia==provincia.id_provincia %}selected{% endif %}>
                            {{ provincia.nombre }}
                        </option>
                        {% endfor %}
                    </select>
                </div>
                <div>
                    <label>Departamento de residencia</label>
                    <select name="departamento_residencia" id="departamento_residencia" disabled>
                        <option value="">Seleccione un departamento</option>
                    </select>
                </div>
                <div>
                    <label>Localidad de residencia</label>
                    <select name="localidad_residencia" id="localidad_residencia" disabled>
                        <option value="">Seleccione una localidad</option>
                    </select>
                </div>
                <div>
                    <label>Dirección postal</label>
                    <input type="text" name="direccion" value="{{ veterano.direccion or '' }}"
                        placeholder="Ingrese dirección">
                </div>
                <div>
                    <label>Código postal</label>
                    <input type="text" name="codigo_postal" id="codigo_postal" readonly
                        placeholder="Se completa automáticamente">
                </div>
                <div>
                    <label>Correo electrónico</label>
                    <input type="email" name="mail" value="{{ veterano.mail or '' }}" placeholder="Ingrese email">
                </div>
                <div>
                    <label>Teléfono</label>
                    <input type="text" name="telefono" value="{% if telefonos %}{{ telefonos[0].telefono }}{% endif %}"
                        placeholder="Ingrese teléfono">
                </div>
            </div>
        </section>

        <!-- Información militar -->
        <section>
            <h3 class="h4">Información militar</h3>
            <div class="grid">
                <div>
                    <label>Fuerza*</label>
                    <select name="fuerza" id="fuerza">
                        <option value="">Seleccione una fuerza</option>
                        {% for fuerza in fuerzas %}
                        <option value="{{ fuerza.id_fuerza }}" {% if veterano.id_fuerza==fuerza.id_fuerza %}selected{%
                            endif %}>
                            {{ fuerza.nombre }}
                        </option>
                        {% endfor %}
                    </select>
                </div>
                <div>
                    <label>Grado</label>
                    <select name="grado" id="grado" disabled>
                        <option value="">Seleccione un grado</option>
                    </select>
                </div>
                <div>
                    <label>Función</label>
                    <input type="text" name="funcion" value="{{ veterano.funcion or '' }}"
                        placeholder="Ingrese función">
                </div>
                <div>
                    <label>Secuelas</label>
                    <input type="text" name="secuelas" value="{{ veterano.secuelas or '' }}"
                        placeholder="Describa las secuelas">
                </div>
                <div>
                    <label>Número de Beneficio Nacional</label>
                    <input type="text" name="nro_beneficio_nacional" value="{{ veterano.nro_beneficio_nacional or '' }}"
                        placeholder="Ingrese número">
                </div>
            </div>
        </section>

        <!-- Estado -->
        <section>
            <h3 class="h4">Estado</h3>
            <div class="grid">
                <div class="estado">
                    <label>Estado de vida:</label>
                    <div class="radio-group">
                        <label>
                            <input type="radio" name="estado_vida" value="vivo" {% if not veterano.es_fallecido
                                %}checked{% endif %}> Vive
                        </label>
                        <label>
                            <input type="radio" name="estado_vida" value="fallecido" {% if veterano.es_fallecido
                                %}checked{% endif %}> Fallecido
                        </label>
                    </div>
                </div>
                <div class= "estado" id="fecha_fallecido" style="{% if not veterano.es_fallecido %}display: none;{% endif %}">
                    <label>Fecha de fallecimiento*</label>
                    <input type="date" name="fecha_fallecimiento" value="{{ veterano.fecha_fallecimiento or '' }}">
                </div>
                <div id="causa_fallecido" class="estado" style="{% if not veterano.es_fallecido %}display: none;{% endif %}">
                    <label>Causa de fallecimiento</label>
                    <select name="causa_fallecimiento">
                        <option value="">Seleccione una causa</option>
                        {% for causa in causas %}
                        <option value="{{ causa.id_causa }}" {% if veterano.id_causa==causa.id_causa %}selected{% endif
                            %}>
                            {{ causa.descripcion }}
                        </option>
                        {% endfor %}
                    </select>
                </div>
            </div>
        </section>

        <!-- Botones -->
        <div class="acciones">
            <button type="button" onclick="window.location.href='{{ url_for('main.modificar_datos') }}'"
                class="cancelar">Cancelar</button>
            <button type="submit" class="guardar">Guardar</button>
        </div>
    </form>
</div>

<script>
    // Datos del servidor (renderizados por Jinja2)
    const gradosData = {{ grados | tojson | safe }};
    const veteranoData = {
        provinciaNacimiento: {{ veterano.provincia_nacimiento or 'null' }},
        departamentoNacimiento: {{ veterano.departamento_nacimiento | tojson | safe }},
        localidadNacimiento: {{ veterano.localidad_nacimiento or 'null' }},
        provinciaResidencia: {{ veterano.provincia_residencia or 'null' }},
        departamentoResidencia: {{ veterano.departamento_residencia | tojson | safe }},
        localidadResidencia: {{ veterano.localidad_residencia or 'null' }},
        idGrado: {{ veterano.id_grado or 'null' }}
    };

    // Calcular edad automáticamente
    function calcularEdad() {
        const fechaNac = document.getElementById('fecha_nacimiento').value;
        if (fechaNac) {
            const hoy = new Date();
            const nacimiento = new Date(fechaNac);
            let edad = hoy.getFullYear() - nacimiento.getFullYear();
            const mes = hoy.getMonth() - nacimiento.getMonth();
            if (mes < 0 || (mes === 0 && hoy.getDate() < nacimiento.getDate())) {
                edad--;
            }
            document.getElementById('edad').value = edad + ' años';
        }
    }

    // Cargar departamentos de nacimiento
    async function cargarDepartamentosNac(provinciaId, deptoSeleccionado = null) {
        const deptoSelect = document.getElementById('departamento_nacimiento');
        const localidadSelect = document.getElementById('localidad_nacimiento');

        deptoSelect.disabled = true;
        deptoSelect.innerHTML = '<option value="">Cargando...</option>';
        localidadSelect.disabled = true;
        localidadSelect.innerHTML = '<option value="">Seleccione una localidad</option>';

        if (!provinciaId) {
            deptoSelect.innerHTML = '<option value="">Seleccione un departamento</option>';
            return;
        }

        const response = await fetch(`/api/localidades/${provinciaId}`);
        const departamentos = await response.json();

        deptoSelect.innerHTML = '<option value="">Seleccione un departamento</option>';
        departamentos.forEach(depto => {
            const option = document.createElement('option');
            option.value = depto;
            option.textContent = depto;
            if (depto === deptoSeleccionado) option.selected = true;
            deptoSelect.appendChild(option);
        });
        deptoSelect.disabled = false;
    }

    // Cargar localidades de nacimiento
    async function cargarLocalidadesNac(provinciaId, departamento, localidadSeleccionada = null) {
        const localidadSelect = document.getElementById('localidad_nacimiento');
        localidadSelect.disabled = true;
        localidadSelect.innerHTML = '<option value="">Cargando...</option>';

        if (!provinciaId || !departamento) {
            localidadSelect.innerHTML = '<option value="">Seleccione una localidad</option>';
            return;
        }

        const response = await fetch(`/api/localidades/${provinciaId}/${encodeURIComponent(departamento)}`);
        const localidades = await response.json();

        localidadSelect.innerHTML = '<option value="">Seleccione una localidad</option>';
        localidades.forEach(loc => {
            const option = document.createElement('option');
            option.value = loc.id_localidad;
            option.textContent = loc.nombre_localidad;
            option.dataset.codigoPostal = loc.codigo_postal || '';
            if (loc.id_localidad == localidadSeleccionada) option.selected = true;
            localidadSelect.appendChild(option);
        });
        localidadSelect.disabled = false;
    }

    // Cargar departamentos de residencia
    async function cargarDepartamentosRes(provinciaId, deptoSeleccionado = null) {
        const deptoSelect = document.getElementById('departamento_residencia');
        const localidadSelect = document.getElementById('localidad_residencia');

        deptoSelect.disabled = true;
        deptoSelect.innerHTML = '<option value="">Cargando...</option>';
        localidadSelect.disabled = true;
        localidadSelect.innerHTML = '<option value="">Seleccione una localidad</option>';

        if (!provinciaId) {
            deptoSelect.innerHTML = '<option value="">Seleccione un departamento</option>';
            return;
        }

        const response = await fetch(`/api/localidades/${provinciaId}`);
        const departamentos = await response.json();

        deptoSelect.innerHTML = '<option value="">Seleccione un departamento</option>';
        departamentos.forEach(depto => {
            const option = document.createElement('option');
            option.value = depto;
            option.textContent = depto;
            if (depto === deptoSeleccionado) option.selected = true;
            deptoSelect.appendChild(option);
        });
        deptoSelect.disabled = false;
    }

    // Cargar localidades de residencia
    async function cargarLocalidadesRes(provinciaId, departamento, localidadSeleccionada = null) {
        const localidadSelect = document.getElementById('localidad_residencia');
        const cpInput = document.getElementById('codigo_postal');

        localidadSelect.disabled = true;
        localidadSelect.innerHTML = '<option value="">Cargando...</option>';

        if (!provinciaId || !departamento) {
            localidadSelect.innerHTML = '<option value="">Seleccione una localidad</option>';
            return;
        }

        const response = await fetch(`/api/localidades/${provinciaId}/${encodeURIComponent(departamento)}`);
        const localidades = await response.json();

        localidadSelect.innerHTML = '<option value="">Seleccione una localidad</option>';
        localidades.forEach(loc => {
            const option = document.createElement('option');
            option.value = loc.id_localidad;
            option.textContent = loc.nombre_localidad;
            option.dataset.codigoPostal = loc.codigo_postal || '';
            if (loc.id_localidad == localidadSeleccionada) option.selected = true;
            localidadSelect.appendChild(option);
        });
        localidadSelect.disabled = false;

        if (localidadSeleccionada) {
            const selectedOption = localidadSelect.options[localidadSelect.selectedIndex];
            if (selectedOption) {
                cpInput.value = selectedOption.dataset.codigoPostal || '';
            }
        }
    }

    // Inicializar cuando el DOM esté listo
    window.addEventListener('DOMContentLoaded', async function () {
        // 1. Calcular edad al cargar
        calcularEdad();

        // 2. Event listener para cambios en fecha
        document.getElementById('fecha_nacimiento').addEventListener('change', calcularEdad);

        // 3. Mostrar/ocultar campos de fallecido
        document.querySelectorAll('input[name="estado_vida"]').forEach(radio => {
            radio.addEventListener('change', function() {
                const display = this.value === 'fallecido' ? 'block' : 'none';
                document.getElementById('fecha_fallecido').style.display = display;
                document.getElementById('causa_fallecido').style.display = display;
            });
        });

        // 4. Event listeners para localidades
        document.getElementById('localidad_residencia').addEventListener('change', function () {
            const selectedOption = this.options[this.selectedIndex];
            const cpInput = document.getElementById('codigo_postal');
            cpInput.value = selectedOption.dataset.codigoPostal || '';
        });

        document.getElementById('provincia_nacimiento').addEventListener('change', function () {
            cargarDepartamentosNac(this.value);
        });

        document.getElementById('departamento_nacimiento').addEventListener('change', function () {
            const provinciaId = document.getElementById('provincia_nacimiento').value;
            cargarLocalidadesNac(provinciaId, this.value);
        });

        document.getElementById('provincia_residencia').addEventListener('change', function () {
            cargarDepartamentosRes(this.value);
        });

        document.getElementById('departamento_residencia').addEventListener('change', function () {
            const provinciaId = document.getElementById('provincia_residencia').value;
            cargarLocalidadesRes(provinciaId, this.value);
        });

        // 5. Cargar grados según fuerza
        document.getElementById('fuerza').addEventListener('change', function () {
            const fuerzaId = this.value;
            const gradoSelect = document.getElementById('grado');

            gradoSelect.innerHTML = '<option value="">Seleccione un grado</option>';

            if (fuerzaId) {
                gradosData.filter(g => g.id_fuerza == fuerzaId).forEach(grado => {
                    const option = document.createElement('option');
                    option.value = grado.id_grado;
                    option.textContent = grado.nombre;
                    if (grado.id_grado == veteranoData.idGrado) {
                        option.selected = true;
                    }
                    gradoSelect.appendChild(option);
                });
                gradoSelect.disabled = false;
            } else {
                gradoSelect.disabled = true;
            }
        });

        // 6. Cargar datos iniciales
        if (veteranoData.provinciaNacimiento) {
            await cargarDepartamentosNac(veteranoData.provinciaNacimiento, veteranoData.departamentoNacimiento);
            if (veteranoData.departamentoNacimiento) {
                await cargarLocalidadesNac(veteranoData.provinciaNacimiento, veteranoData.departamentoNacimiento, veteranoData.localidadNacimiento);
            }
        }

        if (veteranoData.provinciaResidencia) {
            await cargarDepartamentosRes(veteranoData.provinciaResidencia, veteranoData.departamentoResidencia);
            if (veteranoData.departamentoResidencia) {
                await cargarLocalidadesRes(veteranoData.provinciaResidencia, veteranoData.departamentoResidencia, veteranoData.localidadResidencia);
            }
        }

        // 7. Inicializar grados
        const fuerzaSelect = document.getElementById('fuerza');
        if (fuerzaSelect.value) {
            fuerzaSelect.dispatchEvent(new Event('change'));
        }
    });
</script>

{% endblock %}